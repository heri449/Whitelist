-- ðŸ”’ WHITELIST VERIFICATION
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local whitelistURL = "https://raw.githubusercontent.com/heri449/Whitelist/main/White%20list"

local success, result = pcall(function()
    return game:HttpGet(whitelistURL)
end)

if not (success and result) then
    LocalPlayer:Kick("Error al verificar la whitelist.")
    return
end

local isAllowed = false
for line in result:gmatch("[^\r\n]+") do
    if line == LocalPlayer.Name then
        isAllowed = true
        break
    end
end

if not isAllowed then
    LocalPlayer:Kick("Acceso denegado â€“ no estÃ¡s en la whitelist.")
    return
end

-- ðŸ”“ ACCESO PERMITIDO â€“ Script principal

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterPack = game:GetService("StarterPack")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()

local eggName = "Protein Egg"
local punchName = "Punch"
local selectedTarget = nil

-- GUI "KING"
local gui = Instance.new("ScreenGui", PlayerGui)
gui.Name = "KING"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 400, 0, 140)
frame.Position = UDim2.new(0, 10, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 50)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local topBar = Instance.new("Frame", frame)
topBar.Size = UDim2.new(0, 200, 0, 30)
topBar.BackgroundTransparency = 1

local title = Instance.new("TextLabel", topBar)
title.Text = "KING"
title.Size = UDim2.new(1, -35, 1, 0)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Left
title.Position = UDim2.new(0, 5, 0, 0)

local minimizeButton = Instance.new("TextButton", topBar)
minimizeButton.Text = "-"
minimizeButton.Size = UDim2.new(0, 30, 1, 0)
minimizeButton.Position = UDim2.new(1, -35, 0, 0)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 14

local scroll = Instance.new("ScrollingFrame", frame)
scroll.Size = UDim2.new(0, 380, 0, 100)
scroll.Position = UDim2.new(0, 10, 0, 35)
scroll.BackgroundColor3 = Color3.fromRGB(20, 20, 50)
scroll.ClipsDescendants = true
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 6

local layout = Instance.new("UIListLayout", scroll)
layout.FillDirection = Enum.FillDirection.Vertical
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 4)

local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        frame.Size = UDim2.new(0, 240, 0, 35)
        scroll.Visible = false
        topBar.Size = UDim2.new(1, 0, 1, 0)
    else
        frame.Size = UDim2.new(0, 400, 0, 140)
        scroll.Visible = true
        topBar.Size = UDim2.new(0, 200, 0, 30)
    end
end)

local function refreshPlayers()
    for _, v in ipairs(scroll:GetChildren()) do
        if v:IsA("TextButton") then v:Destroy() end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player then
            local btn = Instance.new("TextButton", scroll)
            btn.Size = UDim2.new(1, 0, 0, 25)
            btn.Text = plr.Name
            btn.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.MouseButton1Click:Connect(function()
                if selectedTarget == plr then
                    selectedTarget = nil
                    title.Text = "KING"
                    btn.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
                else
                    selectedTarget = plr
                    title.Text = "Target: " .. plr.Name
                    for _, b in ipairs(scroll:GetChildren()) do
                        if b:IsA("TextButton") then
                            b.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
                        end
                    end
                    btn.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
                end
            end)
        end
    end
    scroll.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y)
end

refreshPlayers()
Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(refreshPlayers)

local function restoreVisibility(tool)
    for _, part in ipairs(tool:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 0
            pcall(function() part.LocalTransparencyModifier = 0 end)
        end
    end
end

local function findTool(toolName)
    return player.Backpack:FindFirstChild(toolName)
        or StarterPack:FindFirstChild(toolName)
        or ReplicatedStorage:FindFirstChild(toolName)
end

local function forceEquip(tool)
    if character and character:FindFirstChild("Humanoid") then
        pcall(function() character.Humanoid:EquipTool(tool) end)
        task.wait(0.1)
        if not character:FindFirstChild(tool.Name) then
            tool.Parent = character
            task.wait(0.1)
        end
        restoreVisibility(tool)
    end
end

local function equipEggAndPunch()
    if not _G.AutoEquipTools then return end
    if not character then return end
    local egg = character:FindFirstChild(eggName)
    local needEgg = not egg or (#egg:GetDescendants()>0 and egg:GetDescendants()[1].Transparency>0)
    if needEgg then
        local tool = findTool(eggName)
        if tool then
            if tool.Parent ~= player.Backpack then
                tool = tool:Clone()
                tool.Parent = player.Backpack
            end
            forceEquip(tool)
        end
    end
    if not character:FindFirstChild(punchName) then
        local tool = findTool(punchName)
        if tool then
            if tool.Parent ~= player.Backpack then
                tool = tool:Clone()
                tool.Parent = player.Backpack
            end
            forceEquip(tool)
        end
    end
end

task.spawn(function()
    while true do
        equipEggAndPunch()
        task.wait(0.5)
    end
end)

task.spawn(function()
    while _G.AutoEquipTools do
        local eggTool = character and character:FindFirstChild(eggName)
        if eggTool then
            for _, conn in ipairs(getconnections(eggTool.Activated)) do conn:Disable() end
            eggTool.Activated:Connect(function() end)
            restoreVisibility(eggTool)
        end
        task.wait(1)
    end
end)

local function startAutoPunch()
    local muscle = player:FindFirstChild("muscleEvent")
    task.spawn(function()
        while _G.AutoEquipTools and muscle do
            local punchTool = character and character:FindFirstChild(punchName)
            or player.Backpack:FindFirstChild(punchName)
            if punchTool and not character:FindFirstChild(punchName) then
                character.Humanoid:EquipTool(punchTool)
            end
            muscle:FireServer("punch", "rightHand")
            task.wait(0.0001)
        end
    end)
end

task.spawn(function()
    while true do
        if typeof(selectedTarget) == "Instance" and selectedTarget:IsA("Player") then
            local targetChar = selectedTarget.Character
            if targetChar then
                local hand = (character or player.Character):FindFirstChild("RightHand")
                or (character or player.Character):FindFirstChild("Right Arm")
                if hand and targetChar:FindFirstChild("HumanoidRootPart") then
                    firetouchinterest(hand, targetChar.HumanoidRootPart, 0)
                    task.wait(0.05)
                    firetouchinterest(hand, targetChar.HumanoidRootPart, 1)
                end
            end
        end
        task.wait(0.1)
    end
end)

player.CharacterAdded:Connect(function(char)
    character = char
    task.wait(1)
    equipEggAndPunch()
end)
player.Backpack.ChildAdded:Connect(function(child)
    if _G.AutoEquipTools and (child.Name == eggName or child.Name == punchName) then
        task.wait(0.2)
        equipEggAndPunch()
    end
end)

_G.AutoEquipTools = _G.AutoEquipTools == nil and true or _G.AutoEquipTools
startAutoPunch()
print("âœ… Script KING cargado correctamente.")
